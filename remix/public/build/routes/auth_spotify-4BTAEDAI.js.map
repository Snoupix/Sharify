{
  "version": 3,
  "sources": ["../../../app/routes/auth_spotify.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/auth_spotify.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/auth_spotify.tsx\");\n  import.meta.hot.lastModified = \"1712663727384.291\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLoaderData, useOutletContext, useSubmit } from \"@remix-run/react\";\nimport Title from \"~/components/title\";\nimport { getSessionData, setSessionData } from \"~/server/session.server\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const sTokens = formData.get(\"spotifyTokens\");\n  return await setSessionData(request, \"SpotifyTokens\", sTokens, \"/host\");\n};\nexport const loader = async ({\n  request\n}) => {\n  const SpotifyTokens = await getSessionData(request, \"SpotifyTokens\");\n  if (SpotifyTokens) {\n    return json({\n      SpotifyTokens: JSON.parse(SpotifyTokens)\n    });\n  }\n  return null;\n};\nexport default function Auth_Spotify() {\n  _s();\n  const loaderData = useLoaderData();\n  const {\n    spotify\n  } = useOutletContext();\n  const submit = useSubmit();\n  const [text, setText] = useState(\"\");\n  const [fetched, setFetched] = useState(false);\n  const [isReady, setIsReady] = useState(false);\n  useEffect(() => {\n    if (spotify == null) return;\n    const interval = setInterval(() => {\n      if (spotify.is_ready) {\n        setIsReady(true);\n        clearInterval(interval);\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [spotify]);\n  useEffect(() => {\n    if (fetched || spotify == null) return;\n    const params = new URLSearchParams(location.search);\n    const code = params.get(\"code\");\n    const error = params.get(\"error\");\n    if (code) {\n      setFetched(true);\n      return spotify.FetchAccessToken(code);\n    }\n    if (error) {\n      setFetched(true);\n      return setText(`Error: ${error}`);\n    }\n    if (loaderData && loaderData.SpotifyTokens) {\n      const expires_in = (loaderData.SpotifyTokens.ein > 0 && loaderData.SpotifyTokens.ein <= 3600 ? loaderData.SpotifyTokens.ein : 3600) * 1000;\n      const msDiff = loaderData.SpotifyTokens.date + expires_in - Date.now();\n      if (msDiff > 0) {\n        setFetched(true);\n        return spotify.ProcessTokens({\n          access_token: loaderData.SpotifyTokens.sat,\n          refresh_token: loaderData.SpotifyTokens.srt,\n          expires_in: loaderData.SpotifyTokens.ein,\n          created_at: loaderData.SpotifyTokens.date\n        });\n      }\n    }\n    (async () => {\n      const url = await spotify.GenerateAuthLink();\n      if (url instanceof Error) {\n        console.error(error);\n        setText(`Error: ${error}`);\n        return;\n      }\n      location.replace(url);\n    })();\n  }, [loaderData, fetched, spotify]);\n  useEffect(() => {\n    if (isReady) {\n      (async () => {\n        setFetched(true);\n        const profile = await spotify.GetProfile();\n        if (!(profile instanceof Error)) {\n          setText(`Successfully connected to ${profile.display_name}`);\n        }\n        const tokens = spotify.GetTokens();\n        setTimeout(() => {\n          submit({\n            spotifyTokens: JSON.stringify({\n              sat: tokens.accessToken,\n              srt: tokens.refreshToken,\n              ein: tokens.expires_in,\n              date: tokens.date\n            })\n          }, {\n            method: 'post'\n          });\n        }, 1000);\n      })();\n    }\n  }, [isReady, submit]);\n  return <div className=\"flex flex-col items-center justify-center content-center h-screen text-main-color font-semibold\">\n            <Title />\n            {text != \"\" ? <Link to=\"/host\" className=\"text-4xl\" data-cy=\"auth-text\">{text}</Link> : <div className=\"loader\"></div>}\n        </div>;\n}\n_s(Auth_Spotify, \"aCroYVKnEj/nwyoO2my5A1A5zlk=\", false, function () {\n  return [useLoaderData, useOutletContext, useSubmit];\n});\n_c = Auth_Spotify;\nvar _c;\n$RefreshReg$(_c, \"Auth_Spotify\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
