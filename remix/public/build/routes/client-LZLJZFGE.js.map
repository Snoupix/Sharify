{
  "version": 3,
  "sources": ["../../../app/routes/client.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/client.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/client.tsx\");\n  import.meta.hot.lastModified = \"1702630583677.9128\";\n}\n// REMIX HMR END\n\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData, useOutletContext, useSubmit } from \"@remix-run/react\";\nimport Title from \"~/components/title\";\nimport { api } from \"~/server/handlers.server\";\nimport Spotify from \"~/app/utils/spotify\";\nimport { getSessionData, setSessionData, unsetSessionData } from \"~/server/session.server\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const deleteSTokens = formData.get('DeleteSpotifyTokens') || false;\n  if (deleteSTokens) {\n    await unsetSessionData(request, \"SpotifyTokens\", \"/\");\n  }\n  const username = formData.get(\"username\");\n  const partyID = formData.get(\"partyID\");\n  const password = formData.get(\"partyPwd\");\n  if (!partyID) {\n    throw new Error(\"Party ID not found, please contact Snoupix\");\n  }\n  const party = api.GetParty(parseInt(partyID));\n  if (!username) {\n    throw new Error(\"Username not found, please contact Snoupix\");\n  }\n  if (!party) {\n    return json({\n      errorMessage: `Party id ${partyID} doesn't exist anymore.`\n    });\n  }\n  if (party.isPrivate && party.password != password) {\n    return json({\n      errorMessage: `Error: Party password incorrect`\n    });\n  }\n  if (api.UsernameExists(username)) {\n    return json({\n      errorMessage: `Error: There is already a Sharify member called \"${username}\"`\n    });\n  }\n  const error = api.JoinParty(parseInt(partyID), username);\n  if (error) {\n    return json({\n      errorMessage: error.message\n    });\n  }\n  return await setSessionData(request, \"username\", username, `/room/${partyID}`);\n};\nexport const loader = async ({\n  request\n}) => {\n  const username = await getSessionData(request, \"username\");\n  if (username) {\n    const party = api.GetUserParty(username);\n    if (party != null) {\n      return redirect(`/room/${party.id}`);\n    }\n  }\n  const parties = api.GetParties(false);\n  return json({\n    parties\n  });\n};\nexport default function Client() {\n  _s();\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  const context = useOutletContext();\n  const submit = useSubmit();\n  const [parties, setParties] = useState([]);\n  const [showUP, setShowUP] = useState(false); // username popup\n  const [showPP, setShowPP] = useState(false); // password popup\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [partyData, setPartyData] = useState(null);\n  useEffect(() => {\n    if (loaderData.parties) {\n      setParties(loaderData.parties.filter(party => !party.bannedClients.includes(context.username)));\n    }\n    if (Spotify.isReady && !Spotify.isOwner) {\n      submit({\n        DeleteSpotifyTokens: \"true\"\n      }, {\n        method: \"post\"\n      });\n    }\n    setUsername(context.username);\n  }, [loaderData]);\n  useEffect(() => {\n    if (actionData && actionData.errorMessage) {\n      const _toast = toast.error(actionData.errorMessage, {\n        position: \"bottom-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        theme: \"dark\"\n      });\n      setUsername(\"\");\n      setPassword(\"\");\n      return () => toast.isActive(_toast) ? toast.dismiss(_toast) : undefined;\n    }\n  }, [actionData]);\n  useEffect(() => {\n    if (!showUP && !showPP && partyData != null && (username.trim() != \"\" || password != \"\")) {\n      handleJoin(partyData.id, partyData.isPrivate);\n    }\n  }, [showUP, showPP]);\n  const handleJoin = (id, isPrivate) => {\n    setPartyData({\n      id,\n      isPrivate\n    });\n    if (!username || username.trim() == \"\") {\n      setShowUP(true);\n      return;\n    }\n    if (isPrivate && password == \"\") {\n      setShowPP(true);\n      return;\n    }\n    submit({\n      username,\n      partyID: String(id),\n      partyPwd: password\n    }, {\n      method: \"post\"\n    });\n  };\n  return <>\n            <Title />\n            <section className=\"h-screen\">\n                <div data-cy=\"div-rooms-array\" className=\"relative m-auto mt-28 w-3/5 h-3/5 flex flex-col overflow-y-scroll border-[1px] border-main-color-hover rounded-lg shadow-around\">\n                    {parties && parties.length > 0 ? parties.map(party => <Form data-cy=\"client-form-room\" onClick={() => handleJoin(party.id, party.isPrivate)} key={party.id} className={\"cursor-pointer flex flex-row justify-center text-2xl py-4 border-b-[1px] duration-300 hover:text-slate-400\" + (party.id % 2 == 0 ? \" text-indigo-600\" : \"\")}>\n                            {`[${party.id}] ${party.name} | ${party.clients.length}/${party.MAX_CLIENTS} | `}\n                            {party.type == \"Spotify\" ? <i className=\"fab fa-spotify pl-2.5 pr-1 mt-1 text-[currentColor]\"></i> : <i className=\"fab fa-youtube pl-2.5 pr-1 mt-1 text-[currentColor]\"></i>}\n                            {party.isPrivate ? ' | ' : ''}\n                            {party.isPrivate ? <i className=\"fas fa-lock pl-2.5 mt-[.15rem] text-[currentColor]\"></i> : ''}\n                        </Form>) : null}\n                    {loaderData && loaderData.parties && loaderData.parties.length == 0 ? <span className=\"text-center text-3xl m-auto\">No parties found</span> : null}\n                    <PasswordPopup display={showPP} setDisplay={setShowPP} setPassword={setPassword} />\n                    <UsernamePopup display={showUP} setDisplay={setShowUP} username={username} setUsername={setUsername} />\n                </div>\n            </section>\n            <ToastContainer />\n        </>;\n}\n_s(Client, \"jy/CZtz6VcE6CvpquV4BD6lQ35w=\", false, function () {\n  return [useLoaderData, useActionData, useOutletContext, useSubmit];\n});\n_c = Client;\nconst UsernamePopup = props => {\n  _s2();\n  const {\n    display,\n    setDisplay,\n    username,\n    setUsername\n  } = props;\n  const inputRef = useRef(null);\n  if (display) {\n    setTimeout(() => inputRef.current?.focus(), 500);\n  }\n  return <div className={`absolute top-0 left-0 h-full w-[100%] flex-col justify-center items-center gap-5 backdrop-blur-sm duration-300 ${display ? \"flex\" : \"hidden\"}`}>\n            <span className=\"text-center text-3xl\">First of all, you need to register your username</span>\n            <input data-cy=\"client-username\" ref={inputRef} type=\"text\" className=\"form-input\" placeholder=\"Username\" defaultValue={username} onChange={e => setUsername(e.target.value)} />\n            <button data-cy=\"client-username-submit\" className=\"text-2xl\" onClick={() => setDisplay(false)}>Close</button>\n        </div>;\n};\n_s2(UsernamePopup, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c2 = UsernamePopup;\nconst PasswordPopup = props => {\n  _s3();\n  const {\n    display,\n    setDisplay,\n    setPassword\n  } = props;\n  const inputRef = useRef(null);\n  if (display) {\n    setTimeout(() => inputRef.current?.focus(), 500);\n  }\n  return <div className={`absolute top-0 left-0 h-full w-[100%] flex-col justify-center items-center gap-5 backdrop-blur-sm duration-300 ${display ? \"flex\" : \"hidden\"}`}>\n            <span className=\"text-center text-3xl\">Type the correct Party password</span>\n            <input data-cy=\"client-party-password\" ref={inputRef} type=\"password\" className=\"form-input w-full\" placeholder=\"Party password\" onChange={e => setPassword(e.currentTarget.value)} />\n            <button data-cy=\"client-party-password-submit\" className=\"text-2xl\" onClick={() => setDisplay(false)}>Close</button>\n        </div>;\n};\n_s3(PasswordPopup, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c3 = PasswordPopup;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Client\");\n$RefreshReg$(_c2, \"UsernamePopup\");\n$RefreshReg$(_c3, \"PasswordPopup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
